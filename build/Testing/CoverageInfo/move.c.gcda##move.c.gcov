        -:    0:Source:/mnt/c/Users/Alexandre L-P/Documents/takuzu-01c/lib/move.c
        -:    0:Graph:/mnt/c/Users/Alexandre L-P/Documents/takuzu-01c/build/CMakeFiles/game.dir/lib/move.c.gcno
        -:    0:Data:/mnt/c/Users/Alexandre L-P/Documents/takuzu-01c/build/CMakeFiles/game.dir/lib/move.c.gcda
        -:    0:Runs:122
        -:    1:#include "takuzu.h"
        -:    2:
      234:    3:move move_create(uint row, uint col, square s, square p) {
      234:    4:    move m = malloc(sizeof(struct move_s));
      234:    5:    pointer_test(m, "move_create: malloc failed");
      234:    6:    m->row = row;
      234:    7:    m->col = col;
      234:    8:    m->s = s;
      234:    9:    m->p = p;
      234:   10:    return m;
        -:   11:}
        -:   12:
      176:   13:void move_delete(move m) {
      176:   14:    if (m != NULL)
      176:   15:        free(m);
      176:   16:    m = NULL;
      176:   17:}
        -:   18:
      154:   19:uint move_row(move m) {
      154:   20:    pointer_test(m, "move_row: move is NULL");
      154:   21:    return m->row;
        -:   22:}
      154:   23:uint move_col(move m) {
      154:   24:    pointer_test(m, "move_col: move is NULL");
      154:   25:    return m->col;
        -:   26:}
      138:   27:square move_s(move m) {
      138:   28:    pointer_test(m, "move_s: move is NULL");
      138:   29:    return m->s;
        -:   30:}
      148:   31:square move_p(move m) {
      148:   32:    pointer_test(m, "move_p: move is NULL");
      148:   33:    return m->p;
        -:   34:}
        -:   35:
        4:   36:void move_print(move m) {
        4:   37:    pointer_test(m, "move_print: move is NULL");
        4:   38:    printf("[%d] [%d] [%d] [%d]\n", m->row, m->col, m->s, m->p);
        4:   39:}
